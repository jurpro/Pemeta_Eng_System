// Generated by view binder compiler. Do not edit!
package com.ujanglukmanbdg.pemeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ujanglukmanbdg.pemeta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DetailExperienceBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView detailAbout;

  @NonNull
  public final TextView detailAboutText;

  @NonNull
  public final TextView detailCompanyUser;

  @NonNull
  public final TextView detailCompanyUserText;

  @NonNull
  public final TextView detailContractAmount;

  @NonNull
  public final TextView detailContractAmountText;

  @NonNull
  public final TextView detailJointOperation;

  @NonNull
  public final TextView detailJointOperationText;

  @NonNull
  public final TextView detailLocation;

  @NonNull
  public final TextView detailLocationText;

  @NonNull
  public final TextView detailName;

  @NonNull
  public final TextView detailNameText;

  @NonNull
  public final TextView detailTitleText;

  @NonNull
  public final TextView detailYear;

  @NonNull
  public final TextView detailYearText;

  @NonNull
  public final Guideline guideline;

  private DetailExperienceBinding(@NonNull ConstraintLayout rootView, @NonNull TextView detailAbout,
      @NonNull TextView detailAboutText, @NonNull TextView detailCompanyUser,
      @NonNull TextView detailCompanyUserText, @NonNull TextView detailContractAmount,
      @NonNull TextView detailContractAmountText, @NonNull TextView detailJointOperation,
      @NonNull TextView detailJointOperationText, @NonNull TextView detailLocation,
      @NonNull TextView detailLocationText, @NonNull TextView detailName,
      @NonNull TextView detailNameText, @NonNull TextView detailTitleText,
      @NonNull TextView detailYear, @NonNull TextView detailYearText,
      @NonNull Guideline guideline) {
    this.rootView = rootView;
    this.detailAbout = detailAbout;
    this.detailAboutText = detailAboutText;
    this.detailCompanyUser = detailCompanyUser;
    this.detailCompanyUserText = detailCompanyUserText;
    this.detailContractAmount = detailContractAmount;
    this.detailContractAmountText = detailContractAmountText;
    this.detailJointOperation = detailJointOperation;
    this.detailJointOperationText = detailJointOperationText;
    this.detailLocation = detailLocation;
    this.detailLocationText = detailLocationText;
    this.detailName = detailName;
    this.detailNameText = detailNameText;
    this.detailTitleText = detailTitleText;
    this.detailYear = detailYear;
    this.detailYearText = detailYearText;
    this.guideline = guideline;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailExperienceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailExperienceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.detail_experience, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailExperienceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detail_about;
      TextView detailAbout = ViewBindings.findChildViewById(rootView, id);
      if (detailAbout == null) {
        break missingId;
      }

      id = R.id.detail_about_text;
      TextView detailAboutText = ViewBindings.findChildViewById(rootView, id);
      if (detailAboutText == null) {
        break missingId;
      }

      id = R.id.detail_company_user;
      TextView detailCompanyUser = ViewBindings.findChildViewById(rootView, id);
      if (detailCompanyUser == null) {
        break missingId;
      }

      id = R.id.detail_company_user_text;
      TextView detailCompanyUserText = ViewBindings.findChildViewById(rootView, id);
      if (detailCompanyUserText == null) {
        break missingId;
      }

      id = R.id.detail_contract_amount;
      TextView detailContractAmount = ViewBindings.findChildViewById(rootView, id);
      if (detailContractAmount == null) {
        break missingId;
      }

      id = R.id.detail_contract_amount_text;
      TextView detailContractAmountText = ViewBindings.findChildViewById(rootView, id);
      if (detailContractAmountText == null) {
        break missingId;
      }

      id = R.id.detail_joint_operation;
      TextView detailJointOperation = ViewBindings.findChildViewById(rootView, id);
      if (detailJointOperation == null) {
        break missingId;
      }

      id = R.id.detail_joint_operation_text;
      TextView detailJointOperationText = ViewBindings.findChildViewById(rootView, id);
      if (detailJointOperationText == null) {
        break missingId;
      }

      id = R.id.detail_location;
      TextView detailLocation = ViewBindings.findChildViewById(rootView, id);
      if (detailLocation == null) {
        break missingId;
      }

      id = R.id.detail_location_text;
      TextView detailLocationText = ViewBindings.findChildViewById(rootView, id);
      if (detailLocationText == null) {
        break missingId;
      }

      id = R.id.detail_name;
      TextView detailName = ViewBindings.findChildViewById(rootView, id);
      if (detailName == null) {
        break missingId;
      }

      id = R.id.detail_name_text;
      TextView detailNameText = ViewBindings.findChildViewById(rootView, id);
      if (detailNameText == null) {
        break missingId;
      }

      id = R.id.detail_title_text;
      TextView detailTitleText = ViewBindings.findChildViewById(rootView, id);
      if (detailTitleText == null) {
        break missingId;
      }

      id = R.id.detail_year;
      TextView detailYear = ViewBindings.findChildViewById(rootView, id);
      if (detailYear == null) {
        break missingId;
      }

      id = R.id.detail_year_text;
      TextView detailYearText = ViewBindings.findChildViewById(rootView, id);
      if (detailYearText == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      return new DetailExperienceBinding((ConstraintLayout) rootView, detailAbout, detailAboutText,
          detailCompanyUser, detailCompanyUserText, detailContractAmount, detailContractAmountText,
          detailJointOperation, detailJointOperationText, detailLocation, detailLocationText,
          detailName, detailNameText, detailTitleText, detailYear, detailYearText, guideline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
