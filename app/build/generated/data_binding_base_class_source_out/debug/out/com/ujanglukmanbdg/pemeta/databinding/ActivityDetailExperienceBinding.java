// Generated by view binder compiler. Do not edit!
package com.ujanglukmanbdg.pemeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.ujanglukmanbdg.pemeta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailExperienceBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AppBarLayout detailToolbar;

  @NonNull
  public final DetailExperienceBinding includeDescriptionExperience;

  @NonNull
  public final HeaderExperienceBinding includeHeaderExperience;

  @NonNull
  public final TextView textCopyright;

  @NonNull
  public final Toolbar toolbar;

  private ActivityDetailExperienceBinding(@NonNull ScrollView rootView,
      @NonNull AppBarLayout detailToolbar,
      @NonNull DetailExperienceBinding includeDescriptionExperience,
      @NonNull HeaderExperienceBinding includeHeaderExperience, @NonNull TextView textCopyright,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.detailToolbar = detailToolbar;
    this.includeDescriptionExperience = includeDescriptionExperience;
    this.includeHeaderExperience = includeHeaderExperience;
    this.textCopyright = textCopyright;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailExperienceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailExperienceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail_experience, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailExperienceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detail_toolbar;
      AppBarLayout detailToolbar = ViewBindings.findChildViewById(rootView, id);
      if (detailToolbar == null) {
        break missingId;
      }

      id = R.id.include_description_experience;
      View includeDescriptionExperience = ViewBindings.findChildViewById(rootView, id);
      if (includeDescriptionExperience == null) {
        break missingId;
      }
      DetailExperienceBinding binding_includeDescriptionExperience = DetailExperienceBinding.bind(includeDescriptionExperience);

      id = R.id.include_header_experience;
      View includeHeaderExperience = ViewBindings.findChildViewById(rootView, id);
      if (includeHeaderExperience == null) {
        break missingId;
      }
      HeaderExperienceBinding binding_includeHeaderExperience = HeaderExperienceBinding.bind(includeHeaderExperience);

      id = R.id.text_copyright;
      TextView textCopyright = ViewBindings.findChildViewById(rootView, id);
      if (textCopyright == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityDetailExperienceBinding((ScrollView) rootView, detailToolbar,
          binding_includeDescriptionExperience, binding_includeHeaderExperience, textCopyright,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
