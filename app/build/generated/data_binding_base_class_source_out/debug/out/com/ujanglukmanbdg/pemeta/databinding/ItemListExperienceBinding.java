// Generated by view binder compiler. Do not edit!
package com.ujanglukmanbdg.pemeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ujanglukmanbdg.pemeta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListExperienceBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardViewListExperience;

  @NonNull
  public final ImageView imgItemPhotoSearch;

  @NonNull
  public final TextView tvItemUsernameSearch;

  @NonNull
  public final TextView tvUrlAddress;

  private ItemListExperienceBinding(@NonNull CardView rootView,
      @NonNull CardView cardViewListExperience, @NonNull ImageView imgItemPhotoSearch,
      @NonNull TextView tvItemUsernameSearch, @NonNull TextView tvUrlAddress) {
    this.rootView = rootView;
    this.cardViewListExperience = cardViewListExperience;
    this.imgItemPhotoSearch = imgItemPhotoSearch;
    this.tvItemUsernameSearch = tvItemUsernameSearch;
    this.tvUrlAddress = tvUrlAddress;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListExperienceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListExperienceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_experience, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListExperienceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardViewListExperience = (CardView) rootView;

      id = R.id.img_itemPhotoSearch;
      ImageView imgItemPhotoSearch = ViewBindings.findChildViewById(rootView, id);
      if (imgItemPhotoSearch == null) {
        break missingId;
      }

      id = R.id.tv_itemUsernameSearch;
      TextView tvItemUsernameSearch = ViewBindings.findChildViewById(rootView, id);
      if (tvItemUsernameSearch == null) {
        break missingId;
      }

      id = R.id.tv_urlAddress;
      TextView tvUrlAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvUrlAddress == null) {
        break missingId;
      }

      return new ItemListExperienceBinding((CardView) rootView, cardViewListExperience,
          imgItemPhotoSearch, tvItemUsernameSearch, tvUrlAddress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
